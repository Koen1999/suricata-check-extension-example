name: Python PR

on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}


jobs:
  test:
    name: Quick Test
    runs-on: linux

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          python -m pip install pytest
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pytest

      - name: Remove regex module
        run: |
          pip uninstall regex --yes

      - name: Test with pytest without regex module
        run: |
          pytest

  build:
    name: Build
    runs-on: linux
    needs:
      - test

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Build wheel and install with pip
        run: |
          pip install .

  lint:
    name: Lint
    runs-on: linux
    needs:
      - build

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          python -m pip install flake8 pyright black ruff
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Type checking with Pyright
        run: |
          python -m pyright

      - name: Lint with Black
        run: |
          black . --check

      - name: Lint with Ruff
        run: |
          ruff check --output-format=github .
